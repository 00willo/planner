# Process this file with autoconf to produce a configure script.
# require autoconf 2.54
AC_PREREQ(2.54)

AC_INIT(AUTHORS)
AM_INIT_AUTOMAKE(planner, 0.12.90)
AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_DISABLE_STATIC
AM_PROG_LIBTOOL

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)
AC_PATH_PROG(PG_CONFIG, pg_config)

PLANNER_COMPILE_WARNINGS

AC_PROG_INTLTOOL([0.30])

AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test x$PKG_CONFIG = xno ; then
  AC_MSG_ERROR([*** pkg-config not found. See http://www.freedesktop.org/software/pkgconfig/])
fi

AC_PATH_PROG(UPDATE_MIME_DATABASE, update-mime-database, no)
AM_CONDITIONAL(HAVE_NEW_MIME, test x$UPDATE_MIME_DATABASE != xno)

AC_PATH_PROG(UPDATE_DESKTOP_DATABASE, update-desktop-database, no)
AM_CONDITIONAL(HAVE_NEWER_MIME, test x$UPDATE_DESKTOP_DATABASE != xno)

dnl  -------------
dnl | API docs    |--------------------------------------------
dnl  -------------
GTK_DOC_CHECK(1.0)

dnl NOTE: We need to use a separate automake conditional for this
dnl       to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)
dnl -----------------------------------------------------------


dnl ==========================================================================
dnl
dnl Library Dependencies, uses pkg-config to detect correct version, etc
dnl
dnl ==========================================================================

dnl If you add a version number here, you *must* add an AC_SUBST line for
dnl it too, or it will never make it into the spec file!

GLIB_REQUIRED=2.4.0
GTK_REQUIRED=2.4.0
LIBGNOMECANVAS_REQUIRED=2.6.0
LIBGNOMEUI_REQUIRED=2.6.0
LIBGLADE_REQUIRED=2.4.0
LIBGNOMEPRINTUI_REQUIRED=2.6.0
GNOME_VFS_REQUIRED=2.6.0
GCONF_REQUIRED=2.6.0

LIBXML_REQUIRED=2.6.0
LIBXSLT_REQUIRED=1.1.0
PYGTK_REQUIRED=2.0.0

AC_SUBST(GLIB_REQUIRED)
AC_SUBST(GTK_REQUIRED)
AC_SUBST(LIBGNOMECANVAS_REQUIRED)
AC_SUBST(LIBGNOMEUI_REQUIRED)
AC_SUBST(LIBGLADE_REQUIRED)
AC_SUBST(LIBGNOMEPRINTUI_REQUIRED)
AC_SUBST(GNOME_VFS_REQUIRED)
AC_SUBST(GCONF_REQUIRED)

AC_SUBST(LIBXML_REQUIRED)
AC_SUBST(LIBXSLT_REQUIRED)
AC_SUBST(PYGTK_REQUIRED)

dnl  -----------
dnl | Database/GDA check |----------------------------------------------
dnl  -----------
AC_ARG_ENABLE(database, [  --enable-database=[no/yes]      enable database support [default=no]], enable_database="$enableval", enable_database=no)

if test "x$enable_database" = "xyes" ; then
    PKG_CHECK_MODULES(GDA, libgda >= 1.0)
    use_gda=yes
else
    use_gda=no
fi

AC_SUBST(GDA_LIBS)
AC_SUBST(GDA_CFLAGS)
AM_CONDITIONAL(HAVE_GDA, test x$use_gda = xyes)
dnl -----------------------------------------------------------


dnl ================================
dnl | planner                      |---------------------------
dnl ================================
PKG_CHECK_MODULES(PLANNER,
[
	glib-2.0 >= $GLIB_REQUIRED
	gobject-2.0 gmodule-2.0
	gtk+-2.0 >= $GTK_REQUIRED
	libgnomecanvas-2.0 >= $LIBGNOMECANVAS_REQUIRED
	libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED
	libglade-2.0 >= $LIBGLADE_REQUIRED
	libgnomeprintui-2.2 >= $LIBGNOMEPRINTUI_REQUIRED
	gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED
	gconf-2.0 >= $GCONF_REQUIRED
])

AC_SUBST(PLANNER_CFLAGS)
AC_SUBST(PLANNER_LIBS)
dnl -----------------------------------------------------------

dnl ================================
dnl | libplanner                   |---------------------------
dnl ================================
PKG_CHECK_MODULES(LIBPLANNER,
[
	glib-2.0 >= $GLIB_REQUIRED
	libxml-2.0 >= $LIBXML_REQUIRED
	gobject-2.0 gmodule-2.0
	gnome-vfs-2.0 >= $GNOME_VFS_REQUIRED
])

AC_SUBST(LIBPLANNER_CFLAGS)
AC_SUBST(LIBPLANNER_LIBS)
dnl -----------------------------------------------------------


dnl ================================
dnl | HTML output file-module      |---------------------------
dnl ================================
PKG_CHECK_MODULES(XSLT, libxslt >= $LIBXSLT_REQUIRED)
XSLT_LIBS="$XSLT_LIBS -lexslt"
AC_SUBST(XSLT_CFLAGS)
AC_SUBST(XSLT_LIBS)
dnl -----------------------------------------------------------



dnl  ------------------
dnl | Scrollkeeper     |---------------------------------------
dnl  ------------------
AC_PATH_PROG(SCROLLKEEPER_CONFIG, scrollkeeper-config,no)
if test x$SCROLLKEEPER_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find scrollkeeper-config. Please install the scrollkeeper package)
fi


dnl  ------------------
dnl | Language Support |---------------------------------------
dnl  ------------------
GETTEXT_PACKAGE=planner
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [The prefix for our gettext translation domains.])

ALL_LINGUAS="am az be bg ca cs da de el en_CA en_GB es et fa fr hi hr hu id is it ja kn ko lv ml mn ms nb nl nn no pl pt pt_BR ru sk sq sr sr@Latn sv uk zh_CN"

AM_GLIB_GNU_GETTEXT

if test "x$prefix" = "xNONE"; then
  GNOMELOCALEDIR=$ac_default_prefix/${DATADIRNAME}/locale
else
  GNOMELOCALEDIR=$prefix/${DATADIRNAME}/locale
fi
AC_DEFINE_UNQUOTED(GNOMELOCALEDIR, "$GNOMELOCALEDIR", [The locale dir to use])
dnl -----------------------------------------------------------

dnl  --------------
dnl | Python setup |--------------------------------------------
dnl  --------------
AC_ARG_ENABLE(python, [  --enable-python        build python bindings [default=auto]], enable_python="$enableval", enable_python=auto)
AC_ARG_ENABLE(python-plugin, [  --enable-python-plugin build python plugin [default=no]], enable_python_plugin="$enableval", enable_python_plugin=no)

if test "x$enable_python" != "xno"; then
    dnl check for python
    have_python=yes
    AM_PATH_PYTHON([2.2])
    AM_CHECK_PYTHON_HEADERS(,have_python=no)
    AC_SUBST(PYGTK_CFLAGS)

    dnl check for pygtk
    if test "x$have_python" = "xyes"; then
      PKG_CHECK_MODULES(PYGTK, pygtk-2.0 >= $PYGTK_REQUIRED, have_python=yes, have_python=no)
    fi
    if test "x$have_python" = "xyes"; then
      AC_PATH_PROG(PYGTK_CODEGEN, pygtk-codegen-2.0, no)
      if test "x$PYGTK_CODEGEN" = xno; then
        AC_MSG_ERROR(could not find pygtk-codegen-2.0 script)
        have_python=no
      fi
    fi
    AC_MSG_CHECKING(for pygtk defs)
    PYGTK_DEFSDIR=`$PKG_CONFIG --variable=defsdir pygtk-2.0`
    AC_SUBST(PYGTK_DEFSDIR)
    AC_MSG_RESULT($PYGTK_DEFSDIR)
else
    have_python=no
fi

AM_CONDITIONAL(HAVE_PYTHON, test x$have_python = xyes)
AM_CONDITIONAL(HAVE_PYTHON_PLUGIN, test x$enable_python_plugin = xyes)
dnl -----------------------------------------------------------

dnl  --------------
dnl | dotnet setup |--------------------------------------------
dnl  --------------
AC_ARG_ENABLE(dotnet, [  --enable-dotnet        build dotnet bindings [default=auto]], enable_dotnet="$enableval", enable_dotnet=no)

if test "x$enable_dotnet" != "xno"; then
    PKG_CHECK_MODULES(,gtk-sharp,have_dotnet=yes,have_dotnet=no)

    if test "x$have_dotnet" = "xyes"; then
        AC_PATH_PROG(GAPI_FIXUP, gapi-fixup, no)
        AC_PATH_PROG(GAPI_CODEGEN, gapi-codegen, no)
        AC_PATH_PROG(MCS, mcs, no)
        AC_PATH_PROG(MONO, mono, no)
    fi
else
    have_dotnet=no
fi

if test "x$enable_dotnet" = "xyes"; then
    AC_MSG_CHECKING(for mono environment)
    if test "x$have_dotnet" = "xno"; then
        AC_MSG_ERROR([not found])
    fi
fi

AM_CONDITIONAL(HAVE_DOTNET, test x$have_dotnet = xyes)

dnl  -----------------------------
dnl | Evolution Data Server check |----------------------------------------------
dnl  -----------------------------
AC_ARG_ENABLE(eds, 
	AC_HELP_STRING ([--enable-eds],      
		       [Enable evolution-data-server support [default=no]])
		       , enable_eds="$enableval", enable_eds=no)

if test "x$enable_eds" = "xyes" ; then
    EDS_REQUIRED=0.0.95
    PKG_CHECK_MODULES(EDS, libecal-1.0 >= $EDS_REQUIRED)
    PKG_CHECK_MODULES(EDS, libebook-1.0 >= $EDS_REQUIRED)
    use_eds=yes
else
    use_eds=no
fi

AC_SUBST(EDS_LIBS)
AC_SUBST(EDS_CFLAGS)
AM_CONDITIONAL(HAVE_EDS_PLUGIN, test x$use_eds = xyes)
dnl -----------------------------------------------------------

dnl This will cause the automake generated makefiles to pass the
dnl correct flags to aclocal.
ACLOCAL_AMFLAGS="\${ACLOCAL_FLAGS}"
AC_SUBST(ACLOCAL_AMFLAGS)

AC_CONFIG_FILES([
Makefile
libplanner/Makefile
libegg/Makefile
libegg/recent-files/Makefile
src/Makefile
docs/Makefile
docs/libplanner/Makefile
docs/user-guide/Makefile
docs/user-guide/C/Makefile
docs/sql/Makefile
examples/Makefile
tests/Makefile
tests/files/Makefile
po/Makefile.in
data/Makefile
data/images/Makefile
data/glade/Makefile
data/ui/Makefile
data/dtd/Makefile
data/stylesheets/Makefile
data/mime/Makefile
data/sql/Makefile
python/Makefile
dotnet/Makefile
dotnet/libplanner/Makefile
dotnet/samples/Makefile
planner.spec
libplanner-1.pc
])


AC_OUTPUT

echo
echo "Planner prefix                : $prefix"
echo "Build API docs                : $enable_gtk_doc"
echo "Python bindings               : $have_python"
echo "Python plugin                 : $enable_python_plugin"
echo "Dotnet bindings               : $have_dotnet"
echo "Database/GDA support          : $use_gda"
echo "Evolution Data Server support : $use_eds"
echo


